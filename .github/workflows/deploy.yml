name: Build and Deploy PreStake MVP

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Build Next.js app
      run: npm run build
      env:
        NEXT_PUBLIC_BASE_RPC: https://sepolia.base.org
        NEXT_PUBLIC_BASE_CHAIN_ID: 84532
        NEXT_PUBLIC_PROJECT_NAME: PreStake
        NEXT_PUBLIC_URL: https://prestake-mvp.vercel.app
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        
  deploy-to-vercel:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        prod: true
        
  smart-contract-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Compile contracts
      run: npx hardhat compile
      
    - name: Deploy to Base Sepolia
      run: npx hardhat run scripts/deploy.js --network baseSepolia
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        NEXT_PUBLIC_BASE_RPC: https://sepolia.base.org
        BASESCAN_API_KEY: ${{ secrets.BASESCAN_API_KEY }}
        
    - name: Verify contract
      run: npx hardhat verify --network baseSepolia ${{ steps.deploy.outputs.contract-address }}
      env:
        BASESCAN_API_KEY: ${{ secrets.BASESCAN_API_KEY }}
      continue-on-error: true
